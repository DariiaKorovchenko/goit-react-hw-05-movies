{"version":3,"file":"static/js/122.840f3f8d.chunk.js","mappings":"kNACA,EAAuB,mBAAvB,EAAkD,oB,+DCuDlD,EAnDa,WACX,OAAkCA,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,OArBAE,EAAAA,EAAAA,YAAU,WAURC,MAAM,sCAAD,OACmCH,EADnC,2BATW,CACdI,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAQHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJZ,EAAaY,EACd,IACAC,OAAM,SAAAC,GAAG,OAAI,yBAAMA,GAAV,GACb,GAAE,CAACb,KAGF,gBAAKc,UAAWC,EAAhB,cACsBC,IAAnBlB,EAAUmB,MACTnB,EAAUmB,KAAKC,KAAI,SAAAC,GACjB,OACE,gBAAmBL,UAAWC,EAA9B,UAC0B,OAAvBI,EAAMC,cACL,gBACEC,IAAG,6CAAwCF,EAAMC,cACjDE,MAAM,MACNC,IAAKJ,EAAMK,QAGb,gBAAKH,IAAKI,EAASH,MAAM,MAAMC,IAAKJ,EAAMK,QAG5C,uBAAIL,EAAMK,QAEV,uCAAeL,EAAMO,eAbdP,EAAMQ,GAgBlB,KAGR,C","sources":["webpack://react-homework-template/./src/components/Cast.module.css?f72c","components/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Cast\":\"Cast_Cast__0Qx8H\",\"actor\":\"Cast_actor__Kb4Fd\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport profile from './profile.jpg';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState({});\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3NDRhNzk5NWRjYjk2OTM0YWE4MzU1MDIzYTEwNjI0YyIsInN1YiI6IjY0ZTc4NzZhNTk0Yzk0MDExYzM1ZmViMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.6frVgnjYRfE5oQtx-Q6Irkw72W67RYy_0_qTBVd5JjI',\n      },\n    };\n\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n      options\n    )\n      .then(response => response.json())\n      .then(data => {\n        setMovieCast(data);\n      })\n      .catch(err => <div>{err}</div>);\n  }, [movieId]);\n\n  return (\n    <div className={css.Cast}>\n      {movieCast.cast !== undefined &&\n        movieCast.cast.map(actor => {\n          return (\n            <li key={actor.id} className={css.actor}>\n              {actor.profile_path !== null ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/original${actor.profile_path}`}\n                  width=\"100\"\n                  alt={actor.name}\n                ></img>\n              ) : (\n                <img src={profile} width=\"100\" alt={actor.name} />\n              )}\n\n              <p>{actor.name}</p>\n\n              <p>Character: {actor.character}</p>\n            </li>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["useState","movieCast","setMovieCast","movieId","useParams","useEffect","fetch","method","headers","accept","Authorization","then","response","json","data","catch","err","className","css","undefined","cast","map","actor","profile_path","src","width","alt","name","profile","character","id"],"sourceRoot":""}