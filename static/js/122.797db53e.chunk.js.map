{"version":3,"file":"static/js/122.797db53e.chunk.js","mappings":"kNACA,EAAuB,mBAAvB,EAAkD,oB,+DC8DlD,EA1Da,WACX,IAAAA,GAAkCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GACtBI,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,OArBAE,EAAAA,EAAAA,YAAU,WAURC,MAAM,sCAADC,OACmCJ,EAAO,2BAV/B,CACdK,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAQHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GACJb,EAAaa,EACf,IACCC,OAAM,SAAAC,GAAG,OAAIC,EAAAA,EAAAA,KAAA,OAAAC,SAAMF,GAAU,GAClC,GAAG,CAACd,KAGFe,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EAASF,cACHG,IAAnBrB,EAAUsB,OACTC,EAAAA,EAAAA,MAAA,OAAAL,SAAA,CAC6B,IAA1BlB,EAAUsB,KAAKE,SACdP,EAAAA,EAAAA,KAAA,KAAAC,SAAG,4CAEsB,IAA1BlB,EAAUsB,KAAKE,QACdxB,EAAUsB,KAAKG,KAAI,SAAAC,GACjB,OACEH,EAAAA,EAAAA,MAAA,MAAmBJ,UAAWC,EAAUF,SAAA,CACd,OAAvBQ,EAAMC,cACLV,EAAAA,EAAAA,KAAA,OACEW,IAAG,sCAAAtB,OAAwCoB,EAAMC,cACjDE,MAAM,MACNC,IAAKJ,EAAMK,QAGbd,EAAAA,EAAAA,KAAA,OAAKW,IAAKI,EAASH,MAAM,MAAMC,IAAKJ,EAAMK,QAG5Cd,EAAAA,EAAAA,KAAA,KAAAC,SAAIQ,EAAMK,QAEVR,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CAAG,cAAYQ,EAAMO,eAbdP,EAAMQ,GAgBnB,QAKZ,C","sources":["webpack://react-homework-template/./src/components/Cast.module.css?f72c","components/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Cast\":\"Cast_Cast__0Qx8H\",\"actor\":\"Cast_actor__Kb4Fd\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport profile from './profile.jpg';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState({});\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3NDRhNzk5NWRjYjk2OTM0YWE4MzU1MDIzYTEwNjI0YyIsInN1YiI6IjY0ZTc4NzZhNTk0Yzk0MDExYzM1ZmViMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.6frVgnjYRfE5oQtx-Q6Irkw72W67RYy_0_qTBVd5JjI',\n      },\n    };\n\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n      options\n    )\n      .then(response => response.json())\n      .then(data => {\n        setMovieCast(data);\n      })\n      .catch(err => <div>{err}</div>);\n  }, [movieId]);\n\n  return (\n    <div className={css.Cast}>\n      {movieCast.cast !== undefined && (\n        <div>\n          {movieCast.cast.length === 0 && (\n            <p>We don't have any actors for this movie</p>\n          )}\n          {movieCast.cast.length !== 0 &&\n            movieCast.cast.map(actor => {\n              return (\n                <li key={actor.id} className={css.actor}>\n                  {actor.profile_path !== null ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/original${actor.profile_path}`}\n                      width=\"100\"\n                      alt={actor.name}\n                    ></img>\n                  ) : (\n                    <img src={profile} width=\"100\" alt={actor.name} />\n                  )}\n\n                  <p>{actor.name}</p>\n\n                  <p>Character: {actor.character}</p>\n                </li>\n              );\n            })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","movieId","useParams","useEffect","fetch","concat","method","headers","accept","Authorization","then","response","json","data","catch","err","_jsx","children","className","css","undefined","cast","_jsxs","length","map","actor","profile_path","src","width","alt","name","profile","character","id"],"sourceRoot":""}