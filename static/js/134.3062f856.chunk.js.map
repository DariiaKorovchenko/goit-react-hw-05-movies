{"version":3,"file":"static/js/134.3062f856.chunk.js","mappings":"+MAiFA,UA7Ee,WAAO,IAAD,EACnB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACjD,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBP,EAAJ,CAUAQ,MAAM,6FAAD,OAC0FR,GAV/E,CACdS,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAQHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OACRZ,GAAc,OAAIY,EAAKC,UAAUC,OAAM,SAAAC,GAAG,OAAI,yBAAMA,GAAV,GADlC,GAfkB,CAkB/B,GAAE,CAACnB,IAkBJ,OACE,kBAAMoB,UAAWC,EAAAA,EAAAA,KAAjB,WACE,kBAAMC,SATW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnB3B,EAAgB,CAAE4B,MAAOF,EAAKG,SAASC,OAAOC,QAC9CL,EAAKM,OACN,EAIG,WACE,kBACEC,KAAK,OACLC,aAAa,MACbC,KAAK,SACLJ,MAAO9B,EACPmC,SAxBkB,SAAAZ,GACxB,GAA2B,KAAvBA,EAAMa,OAAON,MAEf,OADA1B,EAAc,IACPL,EAAgB,CAAC,GAExBA,EAAgB,CAAE4B,MAAOJ,EAAMa,OAAON,OAEzC,KAmBK,mBAAQE,KAAK,SAAb,uBAEc,OAAf7B,IACC,wBACGA,EAAWkC,KAAI,SAAAC,GACd,OACE,yBACE,UAAC,KAAD,CACEC,GAAE,UAAKD,EAAKE,IACZC,MAAO,CAAEC,KAAMrC,GACfe,UAAWC,EAAAA,EAAAA,UAHb,UAKGiB,EAAKK,eACLL,EAAKM,kBAPDN,EAAKE,GAWjB,QAKV,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport css from '../components/App.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const [foundFilms, setFoundFilms] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (searchQuery === '') return;\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3NDRhNzk5NWRjYjk2OTM0YWE4MzU1MDIzYTEwNjI0YyIsInN1YiI6IjY0ZTc4NzZhNTk0Yzk0MDExYzM1ZmViMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.6frVgnjYRfE5oQtx-Q6Irkw72W67RYy_0_qTBVd5JjI',\n      },\n    };\n\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=${searchQuery}`,\n      options\n    )\n      .then(response => response.json())\n      .then(data =>\n        setFoundFilms([...data.results]).catch(err => <div>{err}</div>)\n      );\n  }, [searchQuery]);\n\n  const updateQueryString = event => {\n    if (event.target.value === '') {\n      setFoundFilms([]);\n      return setSearchParams({});\n    } else {\n      setSearchParams({ query: event.target.value });\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    setSearchParams({ query: form.elements.search.value });\n    form.reset();\n  };\n\n  return (\n    <main className={css.Form}>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"search\"\n          value={searchQuery}\n          onChange={updateQueryString}\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {foundFilms !== null && (\n        <ul>\n          {foundFilms.map(film => {\n            return (\n              <li key={film.id}>\n                <Link\n                  to={`${film.id}`}\n                  state={{ from: location }}\n                  className={css.movieLink}\n                >\n                  {film.original_title}\n                  {film.original_name}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["useSearchParams","searchParams","setSearchParams","searchQuery","get","useState","foundFilms","setFoundFilms","location","useLocation","useEffect","fetch","method","headers","accept","Authorization","then","response","json","data","results","catch","err","className","css","onSubmit","event","preventDefault","form","currentTarget","query","elements","search","value","reset","type","autoComplete","name","onChange","target","map","film","to","id","state","from","original_title","original_name"],"sourceRoot":""}